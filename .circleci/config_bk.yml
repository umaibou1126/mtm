version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-ecs: circleci/aws-ecs@1.3.0

# executors: ジョブのステップ実行する環境を定義
executors:
  default:
    docker:
      # circleci/ruby:2.7.1-stretchでエラー
      - image: circleci/ruby:2.7.1-node-browsers-legacy
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          # database.ymlの"DATABASE_HOST"は、localhost
          DATABASE_HOST: 127.0.0.1
          DATABASE_USER: 'root'
          DATABASE_PASSWORD: ''
      - image: circleci/mysql:5.7
        environment:
          MYSQL_HOST: '%'
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
  # aws cliインストール
      - image: circleci/python:3.7-stretch

  docker_build:
    machine:
      docker_layer_caching: true


# commands: ジョブ内で実行する一連のステップをマップとして定義
commands:
  # aws cliインストール
  aws_cli_install:
    steps:
      - run:
          name: awscli のインストール
          command: sudo pip install awscli

  bundle_install_rspec:
    steps:
      - run:
          name: Which bundler?
          command: bundle -v

      # ジョブのキャッシュを復元することで、ジョブ高速化
      - restore_cache:
          keys:
            - cache-gem-{{ checksum "Gemfile.lock" }}
            - cache-gem-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: cache-gem-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Database create
          command: DISABLE_SPRING=true bin/rake db:create --trace
      - run:
          name: Database setup
          command: DISABLE_SPRING=true bin/rake db:schema:load --trace
      - run:
          name: Run rspec
          command: |
            TZ=Asia/Tokyo \
              bundle exec rspec --profile 10 \
                                --out test_results/rspec.xml \
                                --format progress \
                                $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)




# jobs：実行処理
jobs:
  rspec:
    working_directory: ~/rspec
    executor: default
    steps:
      - checkout
      # commandsで指定した"bundle_install_rspec"を実行
      - bundle_install_rspec
      - aws_cli_install




# docker image build && push
# workflows:
#   build_and_deploy:
workflows:
  build_and_deploy:
      - deploy_app_devops_pre:
          working_directory: ~/app
          executor: default
          steps:
            - run:
                name: copy and echo .env
                command: |
                  echo 'export AWS_ACCESS_KEY_ID=""' >> $BASH_ENV

      - aws-ecr/build-and-push-image:
          executor: default
        #   aws-access-key-id: AWS_ACCESS_KEY_ID
        #   aws-secret-access-key: AWS_SECRET_ACCESS_KEY
        #   account-url: AWS_ECR_ACCOUNT_URL
          account-url:
          region: AWS_REGION
          repo: "test-app"
          dockerfile: docker/pre/app/Dockerfile
          tag: "${CIRCLE_SHA1}"

      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          family: 'terraform-family'
          service-name: 'terraform-service'
          cluster-name: 'terraform-cluster'
          container-image-name-updates: 'container=terraform-container,image-and-tag=${AWS_ECR_ACCOUNT_URL}/test-app:${CIRCLE_SHA1}'



# workflows：全てのジョブのオーケストレーション
# workflows:
#   version: 2
#   rspec_deploy_app:
#     # jobsで定義したジョブ
#     jobs:
#       - rspec
        # - deploy_app
            # filters:
            #   # github devブランチ
            #   branchs:
            #     only: dev
